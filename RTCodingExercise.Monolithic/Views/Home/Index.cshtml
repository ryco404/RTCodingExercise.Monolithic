@model PagedList<PlateViewModel>

@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-sm-12 text-center">
        <a class="btn btn-success" asp-action="Add">Add plate</a>
        <a class="btn btn-warning" asp-action="Index">Reset sort</a>

        <div class="mt-4">
            <form method="get">
                <input class="form-control d-inline w-25" name="search" placeholder="Search...">
                <button class="btn btn-sm btn-success" type="submit">Submit</button>
            </form> 
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-10 offset-md-1">
        <table class="table table-striped">
            <caption class="px-2" style="caption-side:top"><partial name="_PageInfo" model="Model"></partial></caption>
            <thead>
                <tr>
                    <th>Plate</th>
                    <th>Purchase Price</th>
                    <th>
                        <div class="d-flex justify-content-between">
                            <span>Sale Price</span> 
                            @{
                                var sortSalePriceAsc = Context.Request.Query["sortSalePriceAsc"];
                                var nextSortSalePriceAsc = sortSalePriceAsc == "False";
                                string sortClass = ""; 
                                
                                if (!string.IsNullOrEmpty(sortSalePriceAsc)) {
                                    sortClass = nextSortSalePriceAsc ? " sort-desc" : " sort-asc";
                                }
                            }
                            <a class="@($"sort{sortClass}")" title="Toggle sort direction" asp-route-sortSalePriceAsc="@nextSortSalePriceAsc">
                                <i class="fa fa-arrow-up"></i><i class="fa fa-arrow-down"></i>
                            </a>
                        </div>
                    </th>
                    <th>
                        Reserved
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var vm in Model.Items!)
                {
                    <tr>
                        <td class="reg">@vm.Plate</td>
                        <td>@vm.PurchasePrice.ToString("C2")</td>
                        <td>@vm.SalePrice.ToString("C2")</td>
                        <td class="text-center">
                            <input id="@($"Reserved_{vm.Id}")" asp-for="@vm.IsReserved" type="checkbox" data-itemid="@vm.Id">
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2"><partial name="_PageInfo" model="Model"></partial></td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
<div class="row">
    <div class="col-md-10 offset-md-1">
        <pager page-number="@Model.PageNumber" page-count="@Model.PageCount">
        </pager>
    </div>
</div>

@section scripts {
    <script src="~/js/lodash.throttle.min.js"></script>
    <script>
        $(function() {
            $('[id^="Reserved_"]').on('change',
                // RC: Throttle request using both trailing & leading edge, meaning that any requests to update
                // will execute before the timeout begins and subsequent requests will be blocked 
                // until after the timeout expires. The most recent request will execute after the timeout has expired
                _.throttle(function () {
                    const $this = $(this);
                    const reg = $this.parents('tr').find('.reg').text();

                    $.post('@Url.Action("Reserve")', 
                    { 
                        id: $this.data('itemid'), 
                        isReserved: $this.is(':checked') 
                    },
                    (data, status, xhr) => {
                        const { isReserved, success, errorMessage } = data;

                        if (success) {
                            const msg = `Plate successfully ${isReserved ? '' : 'un'}reserved with registration '${reg}'`;
                            displayPlateReserveToast(true, msg);
                        } else {
                            const msg = 
                                `Error occurred upation reservation status for plate with registration '${reg}': ${errorMessage}`;
                            displayPlateReserveToast(false, msg);
                        }
                    });
                }, 500, { leading: true, trailing: true }));

            const displayPlateReserveToast = (isSuccess, msg) => {
                $.toast({
                    heading: 'Reserve plate',
                    text: msg,
                    icon: isSuccess ? 'success' : 'error',
                    loader: true,        // Change it to false to disable loader
                    loaderBg: '#9EC600',  // To change the background
                    position: 'bottom-right',
                    hideAfter: 3000
                });
            }
        });
    </script>
}
